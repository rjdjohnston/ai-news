version: '3'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: citywayne_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - citywayne_network

  # Strapi Backend
  backend:
    build:
      context: ..
      dockerfile: deployment/backend.Dockerfile
    container_name: citywayne_backend
    restart: unless-stopped
    depends_on:
      - postgres
    environment:
      NODE_ENV: production
      DATABASE_CLIENT: postgres
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      API_TOKEN_SALT: ${API_TOKEN_SALT}
      APP_KEYS: ${APP_KEYS}
      JWT_SECRET: ${JWT_SECRET}
    volumes:
      - strapi_uploads:/app/public/uploads
    networks:
      - citywayne_network

  # Next.js Frontend
  frontend:
    build:
      context: ..
      dockerfile: deployment/frontend.Dockerfile
    container_name: citywayne_frontend
    restart: unless-stopped
    depends_on:
      - backend
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_API_URL: https://api.citywayne.com
      NEXT_PUBLIC_SITE_URL: https://citywayne.com
    networks:
      - citywayne_network

  # Nginx Web Server
  nginx:
    build:
      context: .
      dockerfile: nginx.Dockerfile
    container_name: citywayne_nginx
    restart: unless-stopped
    depends_on:
      - frontend
      - backend
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./ssl:/etc/nginx/ssl
      - strapi_uploads:/var/www/uploads
    networks:
      - citywayne_network

volumes:
  postgres_data:
  strapi_uploads:

networks:
  citywayne_network:
    driver: bridge 